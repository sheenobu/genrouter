// generated by genrouter -type context -fntype Route -keytype string .; DO NOT EDIT

package router

import (
	"errors"

	"golang.org/x/net/context"
)

func RegisterRoute(ctx context.Context, key string, val Route) context.Context {
	mp, ok := ctx.Value(routeRouterKey).(map[string]Route)
	if !ok {
		mp = make(map[string]Route)
	}
	mp[key] = val
	return context.WithValue(ctx, routeRouterKey, mp)
}

func CallRoute(ctx context.Context, key string, name string) (context.Context, error) {
	r, ok := routefromContext(ctx, key)
	if !ok {
		return ctx, errors.New("Can't find route")
	}

	return r(ctx, name)
}

type routeRouterKeyType int

var routeRouterKey routeRouterKeyType

func routefromContext(ctx context.Context, key string) (Route, bool) {
	mp, ok := ctx.Value(routeRouterKey).(map[string]Route)
	if !ok {
		return nil, false
	}

	r, ok := mp[key]

	if !ok {
		return nil, false
	}

	return r, true
}
