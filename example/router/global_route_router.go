// generated by genrouter -type global -fntype Route -keytype string .; DO NOT EDIT

package router

import (
	"errors"
	"sync"
)

var routes map[string]Route
var routesLock sync.RWMutex

func init() {
	routesLock.Lock()
	defer routesLock.Unlock()
	routes = make(map[string]Route)
}

func RegisterRoute(key string, val Route) {
	routesLock.Lock()
	defer routesLock.Unlock()
	routes[key] = val
}

func CallRoute(key string) error {
	routesLock.RLock()
	defer routesLock.RUnlock()
	r, ok := routes[key]

	if !ok {
		return errors.New("Can't find route")
	}

	return r()
}
